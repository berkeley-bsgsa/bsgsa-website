[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Welcome, Berkeley Biostats Grad Students!",
    "section": "",
    "text": "The Biostatistics Graduate Student Association (BSGSA) is a student organization at the University of California, Berkeley. Our goal is to represent the interests and needs of graduate students in biostatistics. We organize and secure funding for several social events each year, occasionally in coordination with other student organizations, such as those from Statistics or Epidemiology. We also provide support for student-centric events such as new admit visit day (in the Spring) and prospective student events (in the Fall)."
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About BSGSA",
    "section": "",
    "text": "Lauren Liao, 2nd year PhD student (BSGSA President)\nSky Qiu, 2nd year master’s student (BSGSA Vice President)\nJames Duncan, 4th year PhD student\nAndy Kim, 2nd year master’s student\nYi Li, 2nd year PhD student\nTyler Mansfield, 2nd year master’s student\nSeraphina Shi, 1st year PhD student (Biostatistics Graduate Assembly delegate)\nJeffrey Zhou, 1st year PhD student (Biostatistics Graduate Assembly delegate)\n\nPer the BSGSA constitution, elections are held each May to determine the leadership for the following academic year."
  },
  {
    "objectID": "resources/index.html",
    "href": "resources/index.html",
    "title": "Resources",
    "section": "",
    "text": "Academic\nNon-Academic\nGeneral Advice from Current Students"
  },
  {
    "objectID": "resources/index.html#external-links",
    "href": "resources/index.html#external-links",
    "title": "Resources",
    "section": "External links",
    "text": "External links\n\nBiostatistics\n\nBerkeley Biostatistics\n Berkeley Biostatistics facebook group\n BSGSA on Callink\n\n\n\nStatistics\n\nBerkeley Statistics\n Statistics Graduate Student Association (SGSA)\n SGSA on Callink\n\n\n\nSchool of Public Health\n\nUC Berkeley School of Public Health\n School of Public Health Student Government (SPHSG)\n SPHSG on Callink"
  },
  {
    "objectID": "resources/academic.html",
    "href": "resources/academic.html",
    "title": "Academic Resources for Students",
    "section": "",
    "text": "See below for course numbers of relevant seminars!\nNote that not all courses presented here are still offered and not all courses that are “relevant” are included in this list (i.e. some information is outdated or incomplete).\n\n\n\n\nMA students:\n\nStudents seeking the Master of Arts degree usually need to take STAT 201A (probability) and STAT 201B (statistics) if they haven’t taken masters-level probability and statistics before. During the first fall semester, students usually take one additional class, which could be PB HLTH 252D (causal inference) or any of the PB HLTH 240 series (B: survival analysis; C/D: computational biology, etc.). PB HLTH 252D is offered every fall semester. PB HLTH 240B,C,D are offered every other year during the fall semester. STAT 243 (statistical computing) is also a good choice, which is offered every fall semester.\nFor students with less stat/math background who may find STAT 201A/B too difficult, STAT 134 and STAT 135 are good substitutes. Also, STAT 133 is a good alternative to STAT 243 for students with less programming experience.\nOther notes:\n\nEnrollment in STAT 201A, 201B, and 243 can be problematic since they are reserved for statistics master’s students. Simply go to talk to the professors at the first day of class if you are not able to enroll due to the restriction.\nSTAT 134, 135 are also hard to enroll in due to their popularity.\nThere will be a background quiz at the beginning of STAT 201A. It covers basic probability concepts. For example, calculating expectation and drawing a standard normal curve.\n\n\n\n\n\n\n Seminars are typically worth 2 credit hours and often involve minimal time commitment but high levels of exposure to advanced topics in a low-pressure environment. Many can (or must) be taken pass/fail. Some seminars may be worth 3 credit hours and will likely involve slightly more, but not an extreme, amount of work outside of class time. Sometimes these course listings can be difficult to find in the online schedule of classes, but a good rule of thumb when search is that they’re typically numbered between 270 and 299 in whatever department is hosting them. The following are a few seminars that are popular among biostatistics students:\n\nPB HLTH 295 (section varies): Statistics and Genomics Seminar (%X% not offered during Fall 2014)\nPB HLTH 296 (section varies): Causal seminar / Semi-Parametric Models seminar\nCMPBIO 201: Classics in Computational Biology\nSTAT 278B (section varies): Neyman seminar\nSTAT 278B (section varies): Probability seminar\n\n\n\n\n\n12 or more units is a “normal” courseload for graduate students at UC Berkeley. This is also the number of units a student must maintain to qualify for GSI or GSR funding.\nClasses actually begin 10 minutes after the start time listed with the registrar (students and faculty often refer to this as being on “Berkeley Time,” but the practice is not unique to UC Berkeley).\n\n\n\n\n\n\n\nC240A: Introduction to Modern Biostatistical Theory and Practice (Hubbard; Spring)\nC240B: Biostatistical Methods: Survival Analysis and Causality\nC240C: Computational Statistics with Applications in Biology and Medicine (Dudoit; Fall)\nC240D: Computational Statistics with Applications in Biology and Medicine II (Dudoit; Fall)\nC240E: Statistical Genomics I\nC240F: Statistical Genomics II (Dudoit; Spring)\n243D: Adaptive Designs (van der Laan)\nC246A: Censored Longitudinal Data and Causality (van der Laan)\n252D: Causal Inference (Petersen; Fall)\n290-013: Big Data: A Public Health Perspective (Li)\n295 (section varies): Statistics and Genomics Seminar (Dudoit)\n296 (section varies): Advanced Topics in Causal Inference / Semi-Parametric Models Seminar (van der Laan/Hubbard)\n\n\n\n\n\n133: Concepts in Computing with Data\n150: Stochastic Processes (Spring)\n152: Sampling Surveys (Spring)\n153: Time Series (Fall)\n154: Modern Statistical Prediction and Machine Learning (Fall/Spring)\n201A: Intro to probability at an advanced level (Fall)\n201B: Intro to statistics at an advanced level (Fall)\n204: Probability for Applications\n205A: Theoretical Probability (Fall)\n205B: Probability Theory (Spring)\n210A: Theoretical statistics (Fall)\n210B: Theoretical statistics (Spring)\n212: Topics in Theoretical Stats / Semiparametric models\n215A: Statistical models (Fall)\n215B: Statistical models (Spring)\n230A: Linear models (Spring)\n232: Experimental Design\n240: Non-parametric & robust methods (Fall)\n241A: Statistical learning theory (Fall/Spring)\n241B: Advanced Topics in Learning and Decision Making (Spring)\n243: Introduction to Statistical Computing (Fall)\n244: Statistical Computing\n248: Time series (Fall/Spring)\n272: Statistical consulting (Fall/Spring)\n278B: Neyman seminar, Probability seminar\n\n\n\n\n\nARE 212: Econometrics: Multiple Equation Estimation (Spring)\nARE 213: Applied Econometrics (Fall)\nPOL SCI C236A / STAT C239A: The Statistics of Causal Inference in the Social Sciences (Sekhon; Fall)\nPOL SCI 236B / STAT 239B: Quantitative Methodology in the Social Sciences Seminar (Sekhon; Spring)\nECON 240B: Econometrics (Spring)\nECON 241A: Econometrics (Spring)\nECON 270D: Research Transparency Practices in the Social Sciences\nMATH 104: Introduction to Analysis\nPB HLTH 144A/144B: SAS Programming\nPB HLTH C242C: Longitudinal Data Analysis (Fall/Spring)\nPB HLTH 248: Statistical/Computer Analysis using R\nPB HLTH 250A/B/C: Epi Methods & Theory\nPB HLTH 252A: Applied Sampling and Survey Design and Analysis (Fall)\nPB HLTH 254: Occupational and Environmental Epidemiology\nAY 250: Python for data scientists (Fall)\nCS 9H: Python for Programmers (Fall/Spring)\nCS 294-001: Behavioral data mining\nINFO 290: Special topic courses, topics varies by semester\nEDUC 275G: Hierarchical and Longitudinal Modeling\nCMPBIO 201: Classics in Computational Biology (seminar)"
  },
  {
    "objectID": "resources/academic.html#employment",
    "href": "resources/academic.html#employment",
    "title": "Academic Resources for Students",
    "section": "Employment",
    "text": "Employment\n\nTeaching\n\nInternal\n\n\nExternal\n\n\n\nResearch\n\nInternal\n\n\nExternal"
  },
  {
    "objectID": "resources/academic.html#computing",
    "href": "resources/academic.html#computing",
    "title": "Academic Resources for Students",
    "section": "Computing",
    "text": "Computing\n See below to learn about free software for UC Berkeley students!\n\nInternet Connectivity\nThe secure wifi on campus is called AirBears2. Visit “Campus Wi-Fi Options” for details on setting it up on your laptop or mobile device.\n\n\nSoftware\n Students at UC Berkeley may download and install on a personal computer, free of charge, Adobe Creative Suite (CS) Design Premium and Microsoft Office. Visit the Adobe section of the Software Central website and the Microsoft section of the Software Central website for more details. Additional campus-provided software (including Microsoft Windows) is available with a CalNet login at Software Central.\n\n\nHigh Performance Computing\n\nBiostatistics Compute Cluster\nThe biostat cluster is managed by Systems Administrator Burke Bundy. Please contact him to request an account and login details. He is also an excellent source of information regarding the cluster and other computing issues. His tutorials on cluster usage serve as the basis of the information presented below, with supplemental details added as appropriate.\nThe biostat cluster runs a popular grid computing job scheduler called Sun Grid Engine (SGE). All processes that are executed on the cluster should be run through this interface. Code can be run interactively or as a batch job. To run processes interactively, use either the qlogin or qrsh command. (For interested parties, the fine details of the differences between these two commands is explained in the SGE documentation. For most purposes, either will suffice.) After creating an interactive session with one of these two commands, proceed as usual, by, for example, opening a command-line R session.\nTo run code as a batch job, first create a bash script containing code that should be run in the shell, and then submit that job script using the qsub command. An example job script, call it example.sh, might look like the following:\n#!/bin/bash\n#\n#$ -cwd\n#$ -V\n#$ -j y\n#$ -S /bin/bash\n#$ -m beas\n#$ -M your.email@berkeley.edu\n#\n\nR --vanilla < example.R > example.Rout\nThis script differs from a typical shell script because it contains options to be read by qsub. The example options above can be interpreted as the following:\n\n-cwd : Executes job from the user’s current working directory.\n-V : Compute node on which job is run inherits your environment. Omitting this may lead to the job script not being able to find installed software or libraries, etc.\n-j y : Error output from the job will appear in the standard output stream.\n-S /bin/bash : Specifies that bash shell should be used as the interpreting shell for the job.\n-m beas : A notification email will be sent at all of the following points: at the beginning and end of the job and if/when the job is aborted, rescheduled, or suspended.\n-M your.email@berkeley.edu : The server will send notification emails to your.email@berkeley.edu.\n\nAdditional qsub options can be reviewed in the documentation. To submit the above script to a compute node:\n$ qsub example.sh\nAfter a job has been submitted, its progress can be reviewed like so:\n$ qstat\nA cryptic but important piece of information in the output of qstat is the one corresponding to the job state. This column is labeled state and its contents can be interpreted as the following:\n\nd : a call to qdel has been used to initiate job d(eletion).\nE : a job in E(rror) state couldn’t be started due to job properties.\nh : job pending; currently not eligible for execution due to a h(old) state assigned to it or because the job is waiting for completion of other jobs on which it depends.\nr : job is r(unning) or executing.\nR : job was R(estarted) because of job migration or for other reasons.\ns : job s(uspended) via the qmod command.\nS : queue containing the job is S(uspended) and therefore the job is also suspended.\nt : t(ransfering) indicates that a job is about to be executed.\nT : at least one suspend T(hreshold) of the corresponding queue was exceeded and so the job has been suspended.\nw : w(aiting) job pending.\n\nOne option for the qstat command that may be useful is -f, which causes qstat to display “full” or detailed information on running jobs:\n$ qstat -f\nTo see only your own jobs:\n$ qstat -u username\nsubstituting in your own cluster login for username. The qstat command has many more options for customizing output which can be looked up in the documentation.\nTo delete a running job, run:\n$ qdel job#\nsubstituting in the job number for job#, which can be retrieved using qstat.\n\n\nStatistics Compute Servers\nThe statistics department manages several compute servers as well as a cluster. Biostatistics graduate students are allowed accounts on the compute servers (but not the cluster); details on requesting an account are available here. More information on running your process on one of the compute servers is available here."
  },
  {
    "objectID": "resources/academic.html#preparing-reportsreproducible-research",
    "href": "resources/academic.html#preparing-reportsreproducible-research",
    "title": "Academic Resources for Students",
    "section": "Preparing reports/reproducible research",
    "text": "Preparing reports/reproducible research\n\nBasics\nThe most commonly used document preparation systems by UC Berkeley biostat students are \\[\\LaTeX\\] and Markdown.\n\n\\[\\LaTeX\\]\n\\[\\LaTeX\\] is a typesetting package and markup language which excels at displaying symbols and mathematical equations as well as allowing the user intricate control over the formatting of complex documents. You can read more about its advantages here.\nThere are many different ways to interface with \\[\\LaTeX\\] on your computer, potentially requiring some trial and error to find the best setup for your situation. First, install a TeX distribution (or update the one you already have). Options include TeX Live (cross-platform), MiKTeX (Windows only), and MacTeX (Mac OS only). Next, choose an editor. Popular, cross-platform choices are LyX, Sublime Text version 2 or 3 with the LaTeXing plugin, Emacs with the AUCTeX package, Texmaker or its fork TeXstudio. Finally, be sure to have software installed that can read whatever type of document you compile to from \\[\\LaTeX\\] – this is usually PDF but sometimes DVI or PS.\nAn enormous amount of documentation, tutorial and help (1, 2) materials are available online for \\[\\LaTeX\\] users. A good way to get started is to customize a template – howtoTeX.com provides a fairly sophisticated guide and template package you can use to do just that. Also, writing even a fairly simple document with \\[\\LaTeX\\] may require calling on several \\[\\LaTeX\\] packages. (More on a couple of those below.) A few popular packages to keep in your back pocket are listed here and here.\nSome additional tools that may be handy when using \\[\\LaTeX\\]:\n\nDetexify \\[\\LaTeX\\] handwritten symbol recognition (also available as an Android app)\nOnline collaborative \\[\\LaTeX\\] editors:\n\nAuthorea\nOverleaf (formerly writeLaTeX)\nShareLaTeX\nPapeeria\nLaTeX\n\n\n\n\n\nBibliography management\nThe most widely accepted way to integrate references into a \\[\\LaTeX\\] document is to add the references to a .bib (BibTeX) file and reference the .bib within the document’s source. However, there exist – as with most things TeX – many versions of this recipe. Rather than going into those details here, we instead point toward some resources to get you started:\n\nA video tutorial (based in writeLaTeX but applicable to a local TeX installation) presenting the creation of a simple bibilography in a \\[\\LaTeX\\] document and use of Google Scholar as a quick citation generator. (Also note that many reference managers support exporting citations to BibTeX.)\nA more detailed introduction, along with a reminder that sometimes multiple compilations of the document will be necessary once citations are introduced. (Some “smart” editors/compilation scripts may take care of these issues automatically.)\nFor the interested reader, these responses (1, 2) detail some of the intricate details of the differences between \\[\\LaTeX\\] bibliography packages and backends.\n\n\n\nPresentations\nThe most commonly used presentation-style package in \\[\\LaTeX\\] is beamer (official CTAN page). To get you started, here are a few (of many!) resources to look over:\n\nThe extensive beamer class user guide\nA beamer tutorial from MIT, another from UNCG, and yet another from NYU, all chock full of examples (and presented using beamer!).\n\nYou will likely want to customize the look of your presentation. To choose a beamer theme, the beamer theme matrix and the beamer theme gallery sites may come in handy. There are also custom beamer themes available.\n\n\nPosters\nAlthough it may not be the “best” method for some users, it is possible to use \\[\\LaTeX\\] to produce a research poster. Here are some popular packages/classes that can be used for that purpose:\n\nPackages included in most TeX distributions:\n\nbeamerposter (additional documentation and examples)\ntikzposter (additional documentation and examples)\na0poster (basis for beamerposter and tikzposter)\n\nDownloadable classes:\n\nbaposter\n\n\n\n\nReproducible research\nThe ability to reproduce a report from start (data) to finish (text, tables, figures, etc.) is made possible via the combined forces of R, \\[\\LaTeX\\], and an R library such as knitr or its predecessor, Sweave. Presentations can also be made reproducible in the same manner by using knitr in beamer slides. Use of knitr is strongly recommended whenever possible! Detailed documentation and many examples for using knitr are available on the official sites linked to above, as well as on the the knitr R library page and in the 2013 book Dynamic Documents with R and knitr.\n\n\nTheses and dissertations\nThe ucbthesis LaTeX document class is available from the UC Berkeley Math department.\nRecent Berkeley Biostatistics MA graduate Steven Pollack developed an R package in May, 2014, which builds on the ucbthesis \\[\\LaTeX\\] document class and includes knitR and R markdown templates in addition to a \\[\\LaTeX\\] template. The package is available on CRAN and github."
  },
  {
    "objectID": "resources/academic.html#teaching-1",
    "href": "resources/academic.html#teaching-1",
    "title": "Academic Resources for Students",
    "section": "Teaching",
    "text": "Teaching\nBelow is a list of courses that Biostat students have GSI’ed in the past.\n\nPH 142\nPH 241\nPH 245\nStat 2, 20, 21, 131A\nStat 133\nStat 135\nPsych 101"
  }
]